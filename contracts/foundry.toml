# Metadata
coreVersion = '1.0.0'
description = 'This is an example Foundry configuration file.'
id = 'example-id'
system = 'example-system'
systemVersion = '1.0.0'
title = 'Example Foundry Configuration'
version = '1.0.0'

[profile.default]
# Project structure
libs = ['lib'] # Directories to search for libraries  
out = 'out' # Output directory for compiled artifacts
script = 'script' # Script directory
src = 'src' # Source directory
test = 'test' # Test directory

# Remappings
auto_detect_remappings = true # Automatically detect remappings in 'libs' directories
remappings = [] # Manual remappings in the form 'namespace=path'  

# Compilation settings
allow_paths = [] # Additional paths allowed by the compiler  
auto_detect_solc = true # Automatically detect the Solidity compiler version
evm_version = 'london' # EVM version to target
extra_output = [] # Additional outputs from the compiler  
extra_output_files = [] # Additional output files from the compiler  
include_paths = [] # Additional include paths for the compiler  
offline = false # Disable downloading missing solc versions
optimizer = true # Enable the optimizer
optimizer_runs = 200 # Number of optimizer runs
solc = '0.8.10' # Specific Solidity compiler version
via_ir = false # Enable the IR pipeline

# Caching
cache = true # Enable caching
cache_path = 'cache' # Directory for cache files

# Broadcasting
broadcast = 'broadcast' # Directory for broadcast logs

# Error handling
deny_warnings = false # Treat warnings as errors
ignored_error_codes = [1878, 5574] # Compiler error codes to ignore  

# Testing configuration
block_base_fee_per_gas = 0 # Base fee per gas in the block
block_coinbase = '0x0000000000000000000000000000000000000000' # Coinbase address
block_difficulty = 0 # Difficulty of the block
block_gas_limit = 30000000 # Gas limit of the block
block_number = 0 # Block number during EVM execution
block_prevrandao = '0x0000000000000000000000000000000000000000' # Previous randao value
block_timestamp = 0 # Timestamp of the block
chain_id = 1 # Chain ID for the EVM
ffi = false # Enable foreign function interface
gas_limit = 9223372036854775807 # Gas limit for transactions
gas_price = 0 # Gas price in wei
initial_balance = '0xffffffffffffffffffffffff' # Initial balance for test accounts
memory_limit = 33554432 # EVM memory limit in bytes
sender = '0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38' # Default sender address
tx_origin = '0x1804c8AB1F12E6bbf3894d4083f33e07309d1f38' # Default tx.origin address
verbosity = 0 # Verbosity level of test output

# RPC settings
eth_rpc_url = '' # Ethereum RPC URL
etherscan_api_key = '' # Etherscan API key for contract verification
no_storage_caching = false # Disable storage caching
rpc_storage_caching = {chains = 'all', endpoints = 'all'}# RPC storage caching configuration  

# Gas reporting
gas_reports = ['*'] # Contracts to include in gas reports
gas_reports_ignore = [] # Contracts to exclude from gas reports

# Test filtering
match_contract = '' # Run tests in contracts matching this pattern
match_path = '' # Run tests in files matching this pattern
match_test = '' # Run tests matching this pattern
no_match_contract = '' # Exclude tests in contracts matching this pattern
no_match_coverage = '' # Exclude coverage for contracts matching this pattern
no_match_path = '' # Exclude tests in files matching this pattern
no_match_test = '' # Exclude tests matching this pattern

# Output settings
names = false # Print contract names after compilation
sizes = false # Print contract sizes after compilation

# Profiles
[profile.ci]
verbosity = 4 # Increase verbosity for continuous integration

[profile.hardhat]
libs = ['node_modules'] # Library directories for Hardhat projects  
out = 'artifacts' # Output directory for Hardhat projects
src = 'contracts' # Source directory for Hardhat projects
